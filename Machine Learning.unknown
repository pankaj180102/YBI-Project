{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNIOIA3jYsgYLkG+wZzZqWT"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7QniFXNwd7-M","executionInfo":{"status":"ok","timestamp":1663854814594,"user_tz":-330,"elapsed":6,"user":{"displayName":"Pritam Divekar","userId":"15163964329269980912"}},"outputId":"f0933940-6e6f-4e18-dc75-465888435373"},"outputs":[{"output_type":"stream","name":"stdout","text":["hello world\n"]}],"source":["print(\"hello world\")"]},{"cell_type":"code","source":["print(3+5)\n","print(3*5)\n","  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dLEUpENvebzh","executionInfo":{"status":"ok","timestamp":1663854879930,"user_tz":-330,"elapsed":523,"user":{"displayName":"Pritam Divekar","userId":"15163964329269980912"}},"outputId":"940b9f54-7979-487b-e16a-e1381576a948"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["8\n","15\n"]}]},{"cell_type":"code","source":["a=3\n","b=a\n","a=a+3\n","print(a,b)"],"metadata":{"id":"D4W-7WpzebVs","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1663855766908,"user_tz":-330,"elapsed":499,"user":{"displayName":"Pritam Divekar","userId":"15163964329269980912"}},"outputId":"17129748-5cdc-4ba4-c3c8-c11cef152700"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["6 3\n"]}]},{"cell_type":"code","source":["hieght, length, width =3,6,2\n","volume=hieght +length + width\n","print(volume)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BSp5tcAAkx9I","executionInfo":{"status":"ok","timestamp":1663940546274,"user_tz":-330,"elapsed":5,"user":{"displayName":"Pritam Divekar","userId":"15163964329269980912"}},"outputId":"eec6c638-d24b-4a38-ac87-62b451908287"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["11\n"]}]},{"cell_type":"code","source":["student = ['sham','ram','karan','rock','sam']\n","print(student[1])\n","print(student[2])\n","print(student[-1])\n","print(student[2:4])\n","print(student[0:])\n","print(student[:2])\n","print(len(student))\n","students=\"length\"\n","print(len(students))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qPyC04JvBIAC","executionInfo":{"status":"ok","timestamp":1664602763495,"user_tz":-330,"elapsed":613,"user":{"displayName":"Pritam Divekar","userId":"15163964329269980912"}},"outputId":"bf0cee5a-282e-48c0-842c-66dadc4b08eb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["ram\n","karan\n","sam\n","['karan', 'rock']\n","['sham', 'ram', 'karan', 'rock', 'sam']\n","['sham', 'ram']\n","5\n","6\n"]}]},{"cell_type":"code","source":["greeting=\"Hello there \"\n","print('her' in greeting,'her' not in greeting)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4Jx545rqDpXW","executionInfo":{"status":"ok","timestamp":1664602994610,"user_tz":-330,"elapsed":455,"user":{"displayName":"Pritam Divekar","userId":"15163964329269980912"}},"outputId":"1dc34bd5-d1a0-4f3a-98ca-fb84c8394dfa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["True False\n"]}]},{"cell_type":"markdown","source":["modification and change are different"],"metadata":{"id":"KkIdCgrIFJuF"}},{"cell_type":"markdown","source":["mutable:- that can be modified"],"metadata":{"id":"xcnYxR3sE3aq"}},{"cell_type":"code","source":["student = ['sham','ram','karan','rock','sam']\n","student[2]='harsh'\n","print(student)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nAeELDo_FBv5","executionInfo":{"status":"ok","timestamp":1664603264123,"user_tz":-330,"elapsed":4,"user":{"displayName":"Pritam Divekar","userId":"15163964329269980912"}},"outputId":"5a74ba76-78ab-4295-94c1-0eaea1aaef16"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['sham', 'ram', 'harsh', 'rock', 'sam']\n"]}]},{"cell_type":"markdown","source":["strings are inmuitable\n","student='harsh' cannot modified to 'har'"],"metadata":{"id":"CCLNSz5OFnKa"}},{"cell_type":"code","source":["\n","teacher =\"-\".join(['jack','sparrow'])\n","print(teacher)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rX0cV8qrF6Hb","executionInfo":{"status":"ok","timestamp":1664603670342,"user_tz":-330,"elapsed":616,"user":{"displayName":"Pritam Divekar","userId":"15163964329269980912"}},"outputId":"17920662-9c28-4a68-a61e-7b7cf4182ddd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["jack-sparrow\n"]}]},{"cell_type":"markdown","source":["add new element at end == append"],"metadata":{"id":"_m4OjZTMHO55"}},{"cell_type":"code","source":["student = ['sham','ram','karan','rock','sam']\n","student.append('sahil')\n","print(student)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cMnltqvWHU1t","executionInfo":{"status":"ok","timestamp":1664603772709,"user_tz":-330,"elapsed":444,"user":{"displayName":"Pritam Divekar","userId":"15163964329269980912"}},"outputId":"96a6cdba-3fb8-4ece-ae15-de66692a5244"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['sham', 'ram', 'karan', 'rock', 'sam', 'sahil']\n"]}]},{"cell_type":"markdown","source":["**NUMPY** \n","\n"],"metadata":{"id":"pi4P7MSVVbfa"}},{"cell_type":"code","source":["# import time\n","# x=np.random.rand(1000000000)\n","# start=time.time()\n","# mean=sum(x)/len(x)\n","# print(time.time()-start)"],"metadata":{"id":"MzfcZWD7XOHB","executionInfo":{"status":"ok","timestamp":1664608650715,"user_tz":-330,"elapsed":413,"user":{"displayName":"Pritam Divekar","userId":"15163964329269980912"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["import time\n","import numpy as np\n","x=np.random.rand(1000000000)\n","start=time.time()\n","mean_np =  np.mean(x)\n","print(time.time()-start)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HECkV93GZKLO","executionInfo":{"status":"ok","timestamp":1664608511573,"user_tz":-330,"elapsed":12809,"user":{"displayName":"Pritam Divekar","userId":"15163964329269980912"}},"outputId":"5830f3db-f1e7-471b-f725-d7a775ce0893"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["1.0001914501190186\n"]}]},{"cell_type":"code","source":["import numpy as np\n","\n","# 1D array that contains only integers\n","x= np.array([1,2,3,4,5])\n","print('x =',x)\n","print()\n","\n","# we print information about x\n","print('x has dimension:',x.shape)\n","print('x is an object of type :',type(x))\n","print('The element in x are of type :',x.dtype)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9A0hJw_eaFlw","executionInfo":{"status":"ok","timestamp":1664609874113,"user_tz":-330,"elapsed":422,"user":{"displayName":"Pritam Divekar","userId":"15163964329269980912"}},"outputId":"f2de3f3f-5ba4-4ce2-e769-d0b8440b78ed"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["x = [1 2 3 4 5]\n","x has dimension: (5,)\n","x is an object of type : <class 'numpy.ndarray'>\n","The element in x are of type : int64\n"]}]},{"cell_type":"code","source":["import numpy as np\n","x= np.array(['ram','sham'])\n","print('x =',x)\n","print()\n","# we print information about x\n","print('x has dimension:',x.shape)\n","print('x is an object of type :',type(x))\n","print('The element in x are of type :',x.dtype)\n"],"metadata":{"id":"wa3kemNRdpkQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["list can contain multiple data type\n","But nd array contain similar data type"],"metadata":{"id":"dR33kuIofQMq"}},{"cell_type":"code","source":["import numpy as np\n","x= np.array([1,2,'sham'])\n","print('x =',x)\n","print()\n","\n","# we print information about x\n","print('x has dimension:',x.shape)\n","print('x is an object of type :',type(x))\n","print('The element in x are of type :',x.dtype)\n","# all integer gets converted to strings"],"metadata":{"id":"cmZ5FyAGb8pF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","Y= np.array([[1,2,3],[4,5,6],[7,8,9],[10,11,12]])\n","print('Y=\\n', Y)\n","print()\n","\n","print('y has dimension:',Y.shape)\n","print('Y has total of',Y.size,'elements')\n","print(' y is an object of type :',type(Y))\n","print('The element in y are of type :',Y.dtype)\n"],"metadata":{"id":"4u5t2nxygTor"},"execution_count":null,"outputs":[]}]}